#===============================================================================
# Remote datastore properties
# Load the RemoteListener
# to fork the flow of data.  This module allows you to continue writing to your
# configured Datastore as well as send data on to a remote Kairos cluster
# Sample use case is to run clusters in parallel before migrating to larger cluster
#kairosdb.service.remote=org.kairosdb.plugin.remote.ListenerModule
kairosdb.service_folder.remote=/opt/kairosdb/lib/kairos-remote

# If you want kairos to run without any local datastore you can uncomment this line
#kairosdb.service.datastore=org.kairosdb.plugin.remote.FakeDatastoreModule

# Location to store data locally before it is sent off
kairosdb.remote.data_dir=.
kairosdb.remote.remote_url=http://10.92.1.41:8080

# quartz cron schedule for sending data (currently set to 30 min)
kairosdb.remote.schedule=0 */30 * * * ?

# delay the sending of data for a random number of seconds.
# this prevents all remote kairos nodes from sending data at the same time
# the default of 600 means the data will be sent every half hour plus some some
# delay up to 10 minutes.
kairosdb.remote.random_delay=0

# Optional prefix filter for remote module. If present, only metrics that start with the
# values in this comma-separated list are forwarded on.
#kairosdb.remote.prefix_filter=""

# Drops the oldest zipped files waiting to be sent if the used disk space percent is
# greater than the specified value. This is to prevent filling up the disk space
# if the receiving node is inaccessible. If set to 100, no files are deleted.
# The percent must be greater than 0.
kairosdb.remote.drop_on_used_disk_space_threshold_percent=95

# Maximum size of the uncompressed upload files on disk
# This keeps the file size consistent so upload
kairosdb.remote.max_file_size_mb=5

# How often metrics are flushed from memory to disk
kairosdb.remote.flush_interval_ms=2000

# ------------------------------------------------------------------------------
# The following three options are passed to the apache http client
# How long to wait for a connection from the connection manager
kairosdb.remote.connection_request_timeout=1000

# How long to wait to establish a connection with the server
kairosdb.remote.connection_timeout=10000

# SO_TIMEOUT on the socket
kairosdb.remote.socket_timeout=60000
